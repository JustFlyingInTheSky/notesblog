(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{255:function(t,a,s){"use strict";s.r(a);var i=s(28),e=Object(i.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[t._v("#")]),t._v(" github")]),t._v(" "),s("h2",{attrs:{id:"将本地文件推动到github仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将本地文件推动到github仓库"}},[t._v("#")]),t._v(" 将本地文件推动到github仓库")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("git  push  远程仓库地址   分支")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("为远程仓库添加别名")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("git  remote  add  别名  远程仓库地址")])]),t._v(" "),s("li",[s("p",[t._v("如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git  remote  add  origin  https://github.com/demo/git-demo.git\n// 将后面的远程地址添加别名origin后，使用origin即可代替该地址\n//如：\n\tgit push origin master\n")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("登录验证权限")])]),t._v(" "),s("li",[s("p",[t._v("记录仓库地址和分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git  push  -u  origin  master\n// 添加 -u 后，git会记录推送的仓库地址和分支，后面推送会自动推送到该仓库的该分支\n// 之后即可直接push\n\tgit  push\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"克隆仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆仓库"}},[t._v("#")]),t._v(" 克隆仓库")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git  clone  仓库地址\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"拉取仓库内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取仓库内容"}},[t._v("#")]),t._v(" 拉取仓库内容")]),t._v(" "),s("ul",[s("li",[t._v("git  pull  仓库地址  分支")]),t._v(" "),s("li",[t._v("如果远程仓库版本高于本地仓库，那么本地仓库是无法直接推送的，必须先pull更新本地仓库，才能推送修改")])]),t._v(" "),s("h2",{attrs:{id:"ssh免密推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssh免密推送"}},[t._v("#")]),t._v(" SSH免密推送")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("分为公钥和私钥，私钥保存在本地，公钥保存在GitHub，每次使用SSH推送会自动验证公钥和私钥是否配对，配对成功则推送，负责，推送失败")])]),t._v(" "),s("li",[s("p",[t._v("生成公钥和私钥")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ssh-keygen\n// 多次回车使用默认值即可\n")])])]),s("ul",[s("li",[t._v("生成秘钥后，会存储在用户文件夹下的 "),s("code",[t._v(".ssh")]),t._v(" 文件夹内，有 "),s("code",[t._v("id_rsa")]),t._v(" 和 "),s("code",[t._v("id_rsa.pub")]),t._v(" 两个文件，"),s("code",[t._v("id_rsa.pub")]),t._v(" 为公钥文件")])])]),t._v(" "),s("li",[s("p",[t._v("打开 "),s("code",[t._v("id_rsa.pub")]),t._v(" 公钥文件，复制内容，到GitHub账户的设置中添加SSH公钥即可")])]),t._v(" "),s("li",[s("p",[t._v("后续推送使用SSH协议即可")])])]),t._v(" "),s("h2",{attrs:{id:"git忽略清单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git忽略清单"}},[t._v("#")]),t._v(" GIT忽略清单")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".gitignore")]),t._v(" 文件内保存的就是GIT忽略的文件清单")])])])}),[],!1,null,null,null);a.default=e.exports}}]);